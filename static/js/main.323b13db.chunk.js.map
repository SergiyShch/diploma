{"version":3,"sources":["app/Kolona/carItem.js","app/Kolona/modal.js","app/Kolona/transTable.js","app/Kolona/skladKolony.js","app/Marshrut/calculate.js","app/Kolona/calculate.js","app/Kolona/obmejenia.js","app/actions.js","app/constants.js","app/Kolona/kolona.js","app/Marshrut/marshrutResult.js","app/Marshrut/graph.js","app/Marshrut/marshrut.js","app/Result/result.js","app/App.js","app/reducer.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","row","color","CarItem","item","ind","included","classes","inKolona","find","element","marka","TableRow","key","TableCell","className","component","scope","align","v","m","pas","ob","pal","typePal","zh","tpr","tvid","getModalStyle","top","left","transform","theme","paper","display","flexDirection","justifyContent","position","width","backgroundColor","palette","background","border","padding","spacing","button","marginRight","textBox","marginBottom","SimpleModal","props","React","useState","modalStyle","open","setOpen","model","setModel","speed","setSpeed","masa","setMasa","pasag","setPasag","setOb","setPal","palType","setPalType","zapas","setZapas","tpraz","setTpraz","setTvid","handleClose","obj","pushTrans","body","style","id","TextField","type","name","value","onChange","e","target","label","variant","size","parseInt","Button","onClick","Modal","onClose","aria-labelledby","aria-describedby","table","minWidth","TransTable","state","useSelector","trans","resultsKolona","skladKolony","TableContainer","Paper","Table","aria-label","TableHead","TableBody","transports","map","index","data","handleFileChosen","files","kolona","getAllTops","g","push","x","Set","getMatrix","prop","matrix","tops","array","Array","length","fill","arr","indexOf","y","getWeightMap","startPoint","points","visitedNode","weightMap","Infinity","currentNode","counter","j","getShortestPath","weightsMap","endPoint","endPos","endNodeWeight","path","pos","i","unshift","getTimeGraph","kolSpeed","sp","pLength","keys","Object","toString","parseFloat","values","time","vaga","toFixed","calculateKolona","obmejennia","start","finish","getSum","reduce","acc","cur","getOptimalsFromIteration","obm","filter","mass","passangers","volume","variants","resultOptimals","limit","result","mask","results","total","Math","pow","getMaxMarochniySklad","res","speedFiltered","max","min","el","getMaxSpeedFiltered","maxSpeed","getSklad","timeArr","getTime","calculateKolonaMarshrut","getOptimalKolona","marginTop","Obmej","dispatch","useDispatch","setTime","koef","setKoef","setMass","setVolume","setPassangers","dp","setDp","a95","setA95","a92","setA92","a80","setA80","resultsMarsh","getResults","r","Kolona","this","setState","fileReader","handleFileRead","content","parsedContent","JSON","parse","addTransport","file","FileReader","readAsText","onloadend","Component","MarshResults","marsh","join","graph","Marshrut","last","handleChange","event","saveResult","countTops","countLength","lengthArr","getLength","calculateMarshrut","saveMarsh","noValidate","autoComplete","FormControl","InputLabel","Select","labelId","MenuItem","connect","saveGraph","saveMarshrut","ResultContainer","st","App","initialState","initialGraph","Boolean","window","location","hostname","match","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.323b13db.chunk.js","sourcesContent":["import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  row: {\r\n    color: 'red',\r\n  }\r\n});\r\n\r\nfunction CarItem({item, ind, included}) {\r\n  const classes = useStyles();\r\n  const inKolona = included ? included.find(element => item.marka === element.marka) : '';\r\n  \r\n  return (\r\n    <TableRow key={ind}>\r\n      <TableCell className={inKolona && classes.row} component=\"th\" scope=\"row\">{item.marka}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.v}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.m}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.pas}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.ob}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.pal}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.typePal}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.zh}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.tpr}</TableCell>\r\n      <TableCell className={inKolona && classes.row} align=\"center\">{item.tvid}</TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default CarItem;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-around',\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid grey',\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    marginRight: 20,\r\n  },\r\n  textBox: {\r\n    marginBottom: 10,  \r\n  }\r\n}));\r\n\r\nexport default function SimpleModal(props) {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [model, setModel] = React.useState('');\r\n  const [speed, setSpeed] = React.useState('');\r\n  const [masa, setMasa] = React.useState('');\r\n  const [pasag, setPasag] = React.useState('');\r\n  const [ob, setOb] = React.useState('');\r\n  const [pal, setPal] = React.useState('');\r\n  const [palType, setPalType] = React.useState('');\r\n  const [zapas, setZapas] = React.useState('');\r\n  const [tpraz, setTpraz] = React.useState('');\r\n  const [tvid, setTvid] = React.useState('');\r\n\r\n\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    const obj = {\"marka\": model, \"v\": speed, \"m\": masa, \"pas\":pasag, \"ob\": ob, \"pal\": pal, \"typePal\":palType, \"zh\": zapas, \"tpr\": tpraz, \"tvid\": tvid}\r\n    props.pushTrans(obj);\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Додати транспортний засіб</h2>\r\n      <p id=\"simple-modal-description\">\r\n        Характеристики транспортного засобу\r\n      </p>\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"model\"\r\n        value={model}\r\n        onChange={(e) => setModel(e.target.value)}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Модель\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"speed\"\r\n        value={speed}\r\n        onChange={(e) => setSpeed(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Швидкість\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"masa\"\r\n        value={masa}\r\n        onChange={(e) => setMasa(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Маса\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"pasag\"\r\n        value={pasag}\r\n        onChange={(e) => setPasag(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Місця\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"ob\"\r\n        value={ob}\r\n        onChange={(e) => setOb(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Об'єм\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"pal\"\r\n        value={pal}\r\n        onChange={(e) => setPal(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Паливо\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"palType\"\r\n        value={palType}\r\n        onChange={(e) => setPalType(e.target.value)}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Тип палива\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"zapas\"\r\n        value={zapas}\r\n        onChange={(e) => setZapas(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Запас ходу\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"tpraz\"\r\n        value={tpraz}\r\n        onChange={(e) => setTpraz(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Час працездатності\" variant=\"outlined\" size='small'\r\n      />\r\n      <TextField\r\n        type=\"number\"\r\n        name=\"tvid\"\r\n        value={tvid}\r\n        onChange={(e) => setTvid(parseInt(e.target.value))}\r\n        className={classes.textBox} id=\"outlined-basic\"\r\n        label=\"Час відновлення\" variant=\"outlined\" size='small'\r\n      />\r\n      <Button type=\"button\" onClick={handleClose}>\r\n        Зберегти\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* <button type=\"button\" onClick={handleOpen}>\r\n        Open Modal\r\n      </button> */}\r\n      <Button className={classes.button} onClick={() => handleOpen()} variant=\"outlined\" color=\"primary\">\r\n        Додати\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Button} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CarItem from './carItem';\r\nimport SpringModal from './modal';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  button: {\r\n    marginRight: 20,\r\n  },\r\n});\r\n\r\n\r\nexport default function TransTable(props) {\r\n  const classes = useStyles();\r\n  const state = useSelector(state => state);\r\n  const trans = state.resultsKolona.skladKolony ? state.resultsKolona.skladKolony : null;\r\n  \r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell component=\"th\" scope=\"row\">Модель</TableCell>\r\n              <TableCell align=\"left\">Швидкість</TableCell>\r\n              <TableCell align=\"left\">Маса</TableCell>\r\n              <TableCell align=\"left\">Місця</TableCell>\r\n              <TableCell align=\"left\">Об'єм</TableCell>\r\n              <TableCell align=\"left\">Витрати палива</TableCell>\r\n              <TableCell align=\"left\">Тип палива</TableCell>\r\n              <TableCell align=\"left\">Запас ходу</TableCell>\r\n              <TableCell align=\"left\">Час працездатності</TableCell>\r\n              <TableCell align=\"left\">Час відновлення</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.transports.map((row, index) => (\r\n              <CarItem item={row} ind={index} included={trans} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div className=\"btn-group-kolona\">\r\n        <div>\r\n          <SpringModal pushTrans={(data) => props.pushTrans(data)} />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            component=\"label\"\r\n          >\r\n            Зчитати файл\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={e => props.handleFileChosen(e.target.files[0])}\r\n            />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","export const kolona = [\r\n  {\"marka\":\"УАЗ-315195 (1)\", \"v\":60, \"m\":0, \"pas\":7, \"ob\":0, \"pal\":14, \"typePal\":\"A-92\", \"zh\":1500, \"tpr\":27, \"tvid\":3},\r\n  {\"marka\":\"УАЗ-315195 (2)\", \"v\":60, \"m\":0, \"pas\":7, \"ob\":0, \"pal\":14, \"typePal\":\"A-92\", \"zh\":2500, \"tpr\":30, \"tvid\":0},\r\n  {\"marka\":\"ВАЗ-21230 (1)\", \"v\":70, \"m\":0, \"pas\":5, \"ob\":0, \"pal\":14, \"typePal\":\"A-95\", \"zh\":2500, \"tpr\":29, \"tvid\":1},\r\n  {\"marka\":\"ВАЗ-21230 (2)\", \"v\":70, \"m\":0, \"pas\":5, \"ob\":0, \"pal\":11, \"typePal\":\"A-95\", \"zh\":3500, \"tpr\":25, \"tvid\":5},\r\n  {\"marka\":\"Land Rover\", \"v\":60, \"m\":5, \"pas\":5, \"ob\":1, \"pal\":12, \"typePal\":\"ДП\", \"zh\":3800, \"tpr\":28, \"tvid\":2},\r\n  {\"marka\":\"Volkswagen Am (1)\", \"v\":70, \"m\":12, \"pas\":5, \"ob\":3, \"pal\":10, \"typePal\":\"A-95\", \"zh\":3800, \"tpr\":29, \"tvid\":1},\r\n  {\"marka\":\"Volkswagen Am (2)\", \"v\":70, \"m\":12, \"pas\":5, \"ob\":3, \"pal\":10, \"typePal\":\"A-95\", \"zh\":3200, \"tpr\":25, \"tvid\":5},\r\n  {\"marka\":\"ГАЗ-3307\", \"v\":50, \"m\":45, \"pas\":2, \"ob\":14, \"pal\":20, \"typePal\":\"A-80\", \"zh\":3200, \"tpr\":30, \"tvid\":0},\r\n  {\"marka\":\"УАЗ-3303\", \"v\":60, \"m\":10, \"pas\":2, \"ob\":8, \"pal\":18, \"typePal\":\"A-80\", \"zh\":2300, \"tpr\":29, \"tvid\":1},\r\n  {\"marka\":\"КрАЗ-6322\", \"v\":50, \"m\":100, \"pas\":3, \"ob\":25, \"pal\":40, \"typePal\":\"ДП\", \"zh\":3700, \"tpr\":27, \"tvid\":3}\r\n]","export const getAllTops = (data) => {\r\n  let g = [];\r\n\r\n  data.map(item => g.push(item.x));\r\n  const res = [...new Set(g)];\r\n  return res;\r\n}\r\n\r\nconst getMatrix = (data, prop) => {\r\n  const matrix = [];\r\n  const tops = getAllTops(data);\r\n  const array = new Array(tops.length).fill(0);\r\n\r\n  tops.map(top => {\r\n    let arr = [...array];\r\n\r\n    data.map(item => {\r\n      if (item.x === top) {\r\n         let ind = tops.indexOf(item.y);\r\n         arr[ind] = item[prop];\r\n      }\r\n    })\r\n    matrix.push(arr);\r\n  })\r\n  return matrix;\r\n}\r\n\r\nconst getWeightMap = (g, startPoint, points) => {\r\n  const visitedNode = new Array(g.length).fill(0);\r\n  const weightMap = new Array(g.length).fill(Infinity);\r\n  \r\n  let currentNode = getAllTops(points).indexOf(startPoint);\r\n  weightMap[currentNode] = 0;\r\n\r\n  let counter = 1;\r\n\r\n  while (visitedNode.indexOf(0) > -1) {\r\n    for (let j in g[currentNode]) {\r\n      if (\r\n        visitedNode[j] ||\r\n        g[currentNode][j] + weightMap[currentNode] > weightMap[j] ||\r\n        g[currentNode][j] === 0\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      weightMap[j] = g[currentNode][j] + weightMap[currentNode];\r\n    }\r\n    visitedNode[currentNode] = 1;\r\n\r\n    currentNode += counter;\r\n\r\n    if (currentNode >= g.length) {\r\n      \r\n      currentNode = startPoint;\r\n      \r\n      counter = -1;\r\n    }\r\n  }\r\n\r\n  return weightMap;\r\n}\r\n\r\nfunction getShortestPath(g, weightsMap, endPoint, points) {\r\n  let endPos = getAllTops(points).indexOf(endPoint); \r\n\r\n  let endNodeWeight = weightsMap[endPos]; \r\n  \r\n  const path = [];\r\n\r\n  let pos = endPos; \r\n \r\n  while (endNodeWeight !== 0) {\r\n\r\n    for (let i in g[pos]) {\r\n\r\n      if (endNodeWeight === g[pos][i] + weightsMap[i]) {\r\n\r\n        path.unshift(+i);\r\n\r\n        endNodeWeight = weightsMap[i];\r\n\r\n        pos = i;\r\n      }\r\n    }\r\n  }\r\n  path.push(endPos);\r\n\r\n  const results = path.map(item => item = getAllTops(points)[item]);\r\n  \r\n  return results;\r\n}\r\n\r\nexport const calculateKolonaMarshrut = (speed, points, start, finish, res) => {\r\n  \r\n  const g = getMatrix(getTimeGraph(points, speed), 'vaga');\r\n\r\n  const weightsMap = getWeightMap(g, start, getTimeGraph(points, speed));\r\n  \r\n  const path = getShortestPath(g, weightsMap, finish, getTimeGraph(points, speed));\r\n  \r\n  const getTime = () => {\r\n    let timeArr = [];\r\n\r\n    for (let i = 0; i < path.length; i++){\r\n\r\n       const r = getTimeGraph(points, speed).filter(el => el.x === path[i] && el.y === path[i + 1]);\r\n\r\n       r.map(item => timeArr.push(item[\"vaga\"]));\r\n    }\r\n    const result = timeArr.reduce((acc, cur) => acc + cur, 0);\r\n    \r\n    return result;\r\n  }\r\n\r\n  const time = getTime();\r\n\r\n  const result = {\"path\": path, \"time\": time, \"skladKolony\": res};\r\n  \r\n  return result;\r\n}\r\n\r\nexport const calculateMarshrut  = (points, start, finish) => {\r\n  const g = getMatrix(points, 'length');\r\n\r\n  const weightsMap = getWeightMap(g, start, points);\r\n\r\n  const path = getShortestPath(g, weightsMap, finish, points);\r\n\r\n  const countTops = getAllTops(points).reduce((acc, cur) => acc + 1, 0);\r\n\r\n  const getLength = () => {\r\n\r\n    let lengthArr = [];\r\n\r\n    for (let i = 0; i < path.length; i++){\r\n\r\n       const res = points.filter(el => el.x === path[i] && el.y === path[i + 1]);\r\n\r\n       res.map(item => lengthArr.push(item[\"length\"]));\r\n    }\r\n\r\n    const result = lengthArr.reduce((acc, cur) => acc + cur, 0);\r\n\r\n    return result;\r\n  }\r\n\r\n  const countLength = getLength();\r\n\r\n  const result = {\"points\": points, \"path\": path, \"tops\": countTops, \"start\": start, \"finish\": finish, \"length\": countLength, };\r\n\r\n  return result;\r\n}\r\n\r\nexport const getTimeGraph = (data, kolSpeed) => {\r\n  \r\n  const setSpeedLimitGraph = () => {\r\n\r\n    return data.map(item => {\r\n\r\n      const element = {...item};\r\n\r\n      let sp = element.speed;\r\n\r\n      let obj = {};\r\n\r\n      for (let key in sp) {\r\n\r\n        if (sp[key] >= kolSpeed) {\r\n\r\n          obj[key] = kolSpeed;\r\n\r\n        } else {\r\n\r\n          obj[key] = sp[key];\r\n        }\r\n      }\r\n      \r\n      element.speed = obj;\r\n\r\n      return element;\r\n    });\r\n  }\r\n\r\n  const getTimeVaga = () => {\r\n    const object = setSpeedLimitGraph();\r\n    \r\n    return object.map(item => {\r\n\r\n      const element = {...item};\r\n\r\n      let pLength = element.length;\r\n\r\n      let keys = Object.keys(element.speed);\r\n\r\n      keys.push(pLength.toString());\r\n\r\n      keys = keys.map(item => parseFloat(item));\r\n\r\n      let values = Object.values(element.speed);\r\n      \r\n      let time = 0;\r\n\r\n      for (let i = 0; i < values.length; i++) {\r\n        \r\n        time += (keys[i + 1] - keys[i]) / values[i];\r\n      }\r\n      \r\n      element.vaga = parseFloat(time.toFixed(2));\r\n      \r\n      return element;\r\n    })\r\n  }\r\n  const res = getTimeVaga();\r\n\r\n  return res;\r\n} ","import {calculateKolonaMarshrut} from '../Marshrut/calculate';\r\n\r\nexport const calculateKolona = (obmejennia, trans, points, start, finish) => {\r\n  \r\n  const getSum = (arr, prop) => {\r\n    const propsArray = arr.map(item => item[prop]);\r\n\r\n    return propsArray.reduce((acc, cur) => acc + cur, 0);\r\n  }\r\n\r\n  //get all combinations of trans\r\n  const getCombination = (mass, value) => {\r\n    const kolonaSet = (function(arr, limit){\r\n      let results = [], result, mask, total = Math.pow(2, arr.length);\r\n\r\n      for(mask = 0; mask < total; mask++){\r\n        result = [];\r\n        let i = arr.length - 1; \r\n        do{\r\n          if( (mask & (1 << i)) !== 0){\r\n            result.push(arr[i]);\r\n          }\r\n        }while(i--);\r\n\r\n        if( result.length === limit){\r\n          results.push(result);\r\n        }\r\n      }\r\n\r\n      return results; \r\n\r\n    })(mass, value);\r\n    \r\n    return kolonaSet;\r\n  }\r\n\r\n  //get optimal variants from all sets\r\n  const getOptimalsFromIteration = (kolona, obm) => {\r\n    // eslint-disable-next-line array-callback-return\r\n    const obmezhKolonas = kolona.filter(item => { \r\n      if (\r\n        getSum(item, \"m\") >= obm.mass &&\r\n        getSum(item, 'pas') >= obm.passangers &&\r\n        getSum(item, 'ob') >= obm.volume\r\n      ) {\r\n        return item;\r\n      }\r\n    })\r\n    \r\n    return obmezhKolonas;\r\n  }\r\n\r\n  //function of getting all possible sets with realizing of mass,passangers and volume kriterias from obmejennia\r\n  const getMaxMarochniySklad = () => {\r\n    let resultOptimals = [];\r\n\r\n    for (let i = 1; i < trans.length; i++) {\r\n      resultOptimals.push(getOptimalsFromIteration(getCombination(trans, i), obmejennia))\r\n    }\r\n\r\n    return resultOptimals;\r\n  }\r\n\r\n  //final function for optimize to one variant kolona\r\n  const getOptimalKolona = () => {\r\n    const variants =  getMaxMarochniySklad();\r\n\r\n    //sort for max speed\r\n    const getMaxSpeedFiltered = () => {\r\n      let res = [];\r\n      for (let i = 0; i < variants.length; i++) {\r\n        let max = Math.max(\r\n          ...variants[i].map(item => Math.min(...item.map(el => el.v)))\r\n        )\r\n        const result = variants[i].filter(item => Math.min(...item.map(el => el.v)) === max);\r\n  \r\n        res.push(result);\r\n      }\r\n      \r\n      res = res.filter(item => item.length > 0);\r\n\r\n      \r\n      return res;\r\n    } \r\n\r\n    const getSklad = () => {\r\n      const speedFiltered = getMaxSpeedFiltered();\r\n\r\n      const maxSpeed = speedFiltered.map(item => Math.max(...item.map(el => Math.min(...el.map(i => i.v)))))\r\n      \r\n      let max = maxSpeed.find(item => item === Math.max(...maxSpeed));\r\n      \r\n      max = maxSpeed.indexOf(max);\r\n\r\n      const result = speedFiltered[max];\r\n\r\n      return result[0];\r\n    }\r\n\r\n    let res = getSklad(); // склад колони\r\n\r\n    let speed = Math.min(...res.map(item => item.v))\r\n    \r\n    const result = calculateKolonaMarshrut(speed, points, start, finish, res);\r\n    \r\n    return result;\r\n  }\r\n\r\n  return getOptimalKolona();\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport '../App.css';\r\nimport {calculateKolona} from './calculate';\r\nimport {saveKolona} from '../actions';\r\n\r\nconst useStyles = makeStyles({\r\n  textBox: {\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    marginTop: 12,\r\n  }\r\n});\r\n\r\nexport default function Obmej(props) {\r\n  const classes = useStyles();\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const [time, setTime] = useState(6);\r\n  const [koef, setKoef] = useState(0.5);\r\n  const [mass, setMass] = useState(10);\r\n  const [volume, setVolume] = useState(6);\r\n  const [passangers, setPassangers] = useState(6);\r\n  const [dp, setDp] = useState(150);\r\n  const [a95, setA95] = useState(35);\r\n  const [a92, setA92] = useState(115);\r\n  const [a80, setA80] = useState(120);\r\n  const trans = props.transports;\r\n  const obmejennia = {\r\n    time: time,\r\n    koef: koef,\r\n    mass: mass,\r\n    volume: volume,\r\n    passangers: passangers,\r\n    dp: dp,\r\n    a95: a95,\r\n    a92: a92,\r\n    a80: a80,\r\n  }\r\n  \r\n  const start = state.resultsMarsh.start;\r\n  const finish = state.resultsMarsh.finish;\r\n  const points = state.resultsMarsh.points;\r\n  \r\n  const getKolonaResults = () => {\r\n    const res = calculateKolona(obmejennia, trans, points, start, finish);\r\n    return res;\r\n  }\r\n\r\n  const getResults = () => {\r\n    if (state.resultsMarsh.length > 0) {\r\n      const r = getKolonaResults();\r\n      return dispatch(saveKolona(r));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"obm-container\">\r\n      <div className=\"obm-cell\">\r\n        <span className=\"text\">Обмеження</span>\r\n      </div>\r\n      <div className=\"obm-cell\">\r\n        <TextField type=\"number\" name=\"time\" value={time} onChange={(e) => setTime(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"Час\" variant=\"outlined\" size='small' />\r\n        <TextField type=\"number\" name=\"koef\" value={koef} onChange={(e) => setKoef(parseFloat(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"Коефіцієнт гот.\" variant=\"outlined\" size='small' />\r\n      </div>\r\n      <div className=\"obm-cell\">\r\n        <TextField type=\"number\" name=\"mass\" value={mass} onChange={(e) => setMass(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"Маса\" variant=\"outlined\" size='small' />\r\n        <TextField type=\"number\" name=\"volume\" value={volume} onChange={(e) => setVolume(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"Об'єм\" variant=\"outlined\" size='small' />\r\n      </div>\r\n      <div className=\"obm-cell\">\r\n        <TextField type=\"number\" name=\"passangers\" value={passangers} onChange={(e) => setPassangers(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"Люди\" variant=\"outlined\" size='small' />\r\n        <TextField type=\"number\" name=\"dp\" value={dp} onChange={(e) => setDp(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"ДП\" variant=\"outlined\" size='small' />\r\n      </div>\r\n      <div className=\"obm-cell\">\r\n        <TextField type=\"number\" name=\"a95\" value={a95} onChange={(e) => setA95(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"А-95\" variant=\"outlined\" size='small' />\r\n        <TextField type=\"number\" name=\"a92\" value={a92} onChange={(e) => setA92(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"А-92\" variant=\"outlined\" size='small' />\r\n      </div>\r\n      <div className=\"obm-cell\">\r\n        <TextField type=\"number\" name=\"a80\" value={a80} onChange={(e) => setA80(parseInt(e.target.value))} className={classes.textBox} id=\"outlined-basic\" label=\"А-80\" variant=\"outlined\" size='small' />\r\n        <Button onClick={() => getResults()} className={classes.button} variant=\"outlined\" color=\"primary\">\r\n          Розрахувати\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {SAVE_MARSHRUT, SAVE_KOLONA, SAVE_GRAPH} from './constants';\r\n\r\nexport const saveMarshrut = data => ({\r\n  type: SAVE_MARSHRUT,\r\n  data\r\n});\r\n\r\nexport const saveKolona = kolona => ({\r\n  type: SAVE_KOLONA,\r\n  kolona\r\n});\r\n\r\nexport const saveGraph = graph => ({\r\n  type: SAVE_GRAPH,\r\n  graph\r\n});\r\n","export const SAVE_MARSHRUT = \"SAVE_MARSHRUT\";\r\nexport const SAVE_KOLONA = \"SAVE_KOLONA\";\r\nexport const SAVE_GRAPH = \"SAVE_GRAPH\";","import React from 'react';\r\nimport TransTable from './transTable';\r\nimport {kolona} from './skladKolony';\r\nimport Obmej from './obmejenia';\r\nimport '../App.css';\r\n\r\nclass Kolona extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transports: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({transports: kolona});\r\n  }\r\n\r\n  render() {\r\n    let fileReader;\r\n\r\n    const handleFileRead = (e) => {\r\n      const content = fileReader.result;\r\n      let parsedContent = JSON.parse(content);\r\n      this.setState({transports: parsedContent});\r\n    };\r\n\r\n    const handleFileChosen = (file) => {\r\n      fileReader = new FileReader();\r\n      fileReader.readAsText(file);\r\n      fileReader.onloadend = handleFileRead;\r\n      return null;\r\n    };\r\n\r\n    const addTransport = (item) => {\r\n      let state = this.state.transports;\r\n      state.push(item);\r\n      this.setState({transports: state});\r\n    }\r\n\r\n    return (\r\n      <div className=\"kol-container\">\r\n        <h3>Колона</h3>\r\n        {this.state.transports.length > 0 && <TransTable pushTrans={(data) => addTransport(data)} handleFileChosen={(data) => handleFileChosen(data)} transports={this.state.transports}></TransTable>}\r\n        <Obmej transports={this.state.transports} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Kolona;","import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default function MarshResults({results}) {\r\n  let marsh = results.join(' -> ');\r\n\r\n  return (\r\n    <div className=\"marsh-res-container\">\r\n      <span className=\"color-red\">Оптимальний за довжиною маршрут: </span>\r\n      <span className=\"color-red\">{marsh}</span>\r\n    </div>\r\n  )\r\n}","export const graph = [\r\n  {\r\n    \"x\": \"A\", \r\n    \"y\": \"B\",\r\n    \"length\": 33.3,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n    }\r\n  },\r\n  {\r\n    \"x\": \"A\", \r\n    \"y\": \"C\", \r\n    \"length\": 81.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 50,\r\n    }\r\n  },\r\n  {\r\n    \"x\": \"B\", \r\n    \"y\": \"A\",\r\n    \"length\": 33.3,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"B\", \r\n    \"y\":\"D\", \r\n    \"length\": 146.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 50,\r\n      \"90\": 40,\r\n      \"110\": 80,\r\n      \"130\": 70,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"B\", \r\n    \"y\":\"E\", \r\n    \"length\": 56.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n    }\r\n  },\r\n  {\r\n    \"x\": \"C\", \r\n    \"y\": \"A\", \r\n    \"length\": 81.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 50,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"C\", \r\n    \"y\":\"E\", \r\n    \"length\": 52,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"C\", \r\n    \"y\":\"G\", \r\n    \"length\": 95,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 70,\r\n      \"90\": 50,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"D\", \r\n    \"y\":\"B\", \r\n    \"length\": 146.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 50,\r\n      \"90\": 40,\r\n      \"110\": 80,\r\n      \"130\": 70,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"D\", \r\n    \"y\":\"F\", \r\n    \"length\": 55,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"E\", \r\n    \"y\":\"B\", \r\n    \"length\": 56.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n    }\r\n  },  \r\n  {\r\n    \"x\":\"E\", \r\n    \"y\":\"C\", \r\n    \"length\": 52,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"E\", \r\n    \"y\":\"F\", \r\n    \"length\": 80,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 50,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"60\": 70,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"E\", \r\n    \"y\":\"H\", \r\n    \"length\": 161.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 50,\r\n      \"20\": 60,\r\n      \"30\": 60,\r\n      \"50\": 60,\r\n      \"70\": 60,\r\n      \"90\": 50,\r\n      \"110\": 50,\r\n      \"140\": 60,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"G\", \r\n    \"y\":\"C\", \r\n    \"length\": 95,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 100,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 70,\r\n      \"90\": 50,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"G\", \r\n    \"y\":\"H\", \r\n    \"length\": 150,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 80,\r\n      \"90\": 90,\r\n      \"110\": 60,\r\n      \"130\": 70,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"F\", \r\n    \"y\":\"D\", \r\n    \"length\": 55,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"F\", \r\n    \"y\":\"E\", \r\n    \"length\": 80,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 50,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"60\": 70,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"F\", \r\n    \"y\":\"H\", \r\n    \"length\": 102,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 80,\r\n      \"90\": 90,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"H\", \r\n    \"y\":\"F\", \r\n    \"length\": 102,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 80,\r\n      \"90\": 90,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"H\", \r\n    \"y\":\"G\", \r\n    \"length\": 150,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 80,\r\n      \"20\": 70,\r\n      \"30\": 80,\r\n      \"50\": 60,\r\n      \"70\": 80,\r\n      \"90\": 90,\r\n      \"110\": 60,\r\n      \"130\": 70,\r\n    }\r\n  },\r\n  {\r\n    \"x\":\"H\", \r\n    \"y\":\"E\", \r\n    \"length\": 161.7,\r\n    \"vaga\": 0,\r\n    \"speed\": {\r\n      \"0\": 50,\r\n      \"10\": 50,\r\n      \"20\": 60,\r\n      \"30\": 60,\r\n      \"50\": 60,\r\n      \"70\": 60,\r\n      \"90\": 50,\r\n      \"110\": 50,\r\n      \"140\": 60,\r\n    }\r\n  },\r\n];\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {Button} from '@material-ui/core';\r\nimport '../App.css';\r\nimport MarshResult from './marshrutResult';\r\nimport {calculateMarshrut, getAllTops} from './calculate';\r\nimport {saveMarshrut, saveGraph} from '../actions';\r\nimport {graph} from './graph';\r\n\r\nclass Marshrut extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      points: [],\r\n      start: \"\",\r\n      finish: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const tops = getAllTops(graph);\r\n    this.setState({points: graph, start: tops[0], finish: tops[tops.length - 1]})\r\n  }\r\n\r\n  render() {\r\n    let fileReader;\r\n\r\n    const handleFileRead = (e) => {\r\n      const content = fileReader.result;\r\n      let parsedContent = JSON.parse(content);\r\n      let last = getAllTops(parsedContent);\r\n      this.setState({points: parsedContent, start: getAllTops(parsedContent)[0], finish: getAllTops(parsedContent)[last.length - 1]});\r\n    };\r\n\r\n    const handleFileChosen = (file) => {\r\n      fileReader = new FileReader();\r\n      fileReader.readAsText(file);\r\n      fileReader.onloadend = handleFileRead;\r\n      return null;\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n      const {name, value} = event.target;\r\n      this.setState({[name]: value});\r\n    };\r\n\r\n    const saveResult = () => {\r\n      const res = calculateMarshrut(this.state.points, this.state.start, this.state.finish);\r\n      \r\n      this.props.saveMarsh(res);\r\n    }\r\n    \r\n    return (\r\n      <div className=\"marsh-container\">\r\n        <h3>Маршрут</h3>\r\n        <div>\r\n          <form className='form' noValidate autoComplete=\"off\">\r\n            <div className=\"group\">\r\n              <div className=\"inner-element\">\r\n                <FormControl>\r\n                  <InputLabel id=\"demo-simple-select-label\">Початкова точка</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    name=\"start\"\r\n                    value={this.state.start}\r\n                    onChange={e => handleChange(e)}\r\n                  >\r\n                    {getAllTops(this.state.points).map(item => \r\n                      <MenuItem value={item}>{item}</MenuItem>\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n              <div className=\"inner-element\">\r\n                <FormControl>\r\n                  <InputLabel id=\"demo-simple-select-label\">Кінцева точка</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    name=\"finish\"\r\n                    value={this.state.finish}\r\n                    onChange={e => handleChange(e)}\r\n                  >\r\n                    {getAllTops(this.state.points).map(item => \r\n                      <MenuItem value={item}>{item}</MenuItem>\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n            <div className=\"group\">\r\n              <div className=\"inner-element\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                component=\"label\"\r\n              >\r\n                Зчитати файл\r\n                <input\r\n                  type=\"file\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={e => handleFileChosen(e.target.files[0])}\r\n                />\r\n              </Button>\r\n              </div>\r\n              <div className=\"inner-element\">\r\n                <Button onClick={() => saveResult()} variant=\"outlined\" color=\"primary\">\r\n                  Розрахувати\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          {this.props.state.length > 0 && <MarshResult results={this.props.state.path} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  state: state.resultsMarsh\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  saveGraph: graph => dispatch(saveGraph(graph)),\r\n  saveMarsh: data => dispatch(saveMarshrut(data)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Marshrut);","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport '../App.css';\r\n\r\nexport default function ResultContainer(props) {\r\n  const state = useSelector(state => state);\r\n\r\n  const kolona = Object.keys(state.resultsKolona).length > 0 ? true : false;\r\n  const st = state.resultsKolona[\"skladKolony\"];\r\n  const trans = st ? st.map(item => item.marka) : null;\r\n\r\n  return (Object.keys(state.resultsMarsh).length > 0 &&\r\n    <div className=\"resultContainer\">\r\n      <h3>Результати оптимізації</h3>\r\n      <span>Кількість вершин графа:</span>\r\n      <span className=\"red-text\">{state.resultsMarsh[\"tops\"]}</span>\r\n      <span>Оптимальний по довжині маршрут для руху:</span>\r\n      <span className=\"red-text\">{state.resultsMarsh[\"path\"].join(' -> ') + '( ' + state.resultsMarsh[\"length\"] + ' км )'}</span>\r\n      {kolona &&\r\n      <div className=\"kolonaResults\">\r\n        <span>Оптимальні результати:</span>\r\n        <span>Оптимальний маршрут для руху:</span>\r\n        <span className=\"red-text\">{state.resultsKolona[\"path\"].join(\" -> \") + '( ' + state.resultsKolona[\"time\"].toFixed(2) + ' год )'}</span>\r\n        <span>Оптимальний склад колони:</span>\r\n        <span className=\"red-text\">{trans.join(', ')}</span>\r\n      </div>}\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport Kolona from './Kolona/kolona';\nimport Marshrut from './Marshrut/marshrut';\nimport ResultContainer from './Result/result';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Оптимізація складу колони техніки в залежності від маршруту для руху</h1>\n      <Marshrut />\n      <Kolona />\n      <ResultContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import {SAVE_MARSHRUT, SAVE_KOLONA, SAVE_GRAPH} from './constants';\r\n\r\nconst initialState = {\r\n  resultsMarsh: {},\r\n  resultsKolona: {},\r\n  initialGraph: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SAVE_MARSHRUT: {\r\n      return {...state, resultsMarsh: action.data};\r\n    }\r\n    case SAVE_KOLONA: {\r\n      return {...state, resultsKolona: action.kolona};\r\n    }\r\n    case SAVE_GRAPH:\r\n      return {...state, initialGraph: action.graph};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './app/App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './app/reducer';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}